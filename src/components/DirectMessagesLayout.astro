---
// Direct Messages Layout Component
import users from '../data/users.json';
import TopBar from './TopBar.astro';
import ServerBar from './ServerBar.astro';
import MainChat from './MainChat.astro';
import UserInfo from './UserInfo.astro';

export interface Props {
  channel?: string;
}

const { channel = 'home' } = Astro.props;

// Get the current logged-in user (nickbg)
const currentLoggedInUser = users.users.find(u => u.id === 'nickbg');

// Get the user being messaged (if any)
const currentUser = users.users.find(u => u.id === channel);
---

<div class="discord-layout">
  <TopBar />
  <ServerBar activeServer="" isDMPage={true} />

  <!-- DM Sidebar (Left) - Shows Friends/Users -->
  <div class="dm-sidebar">
    <div class="dm-header">
      <h2 class="dm-title">Direct Messages</h2>
      <button class="dm-add-btn">+</button>
    </div>
    
    <div class="dm-list">
      {users.users.filter(user => ['kodama', 'alice', 'karl', 'scott', 'sato', 'nickbg'].includes(user.id)).map((user) => (
        <a href={`/direct-messages/${user.id}`} class={`dm-item ${channel === user.id ? 'active' : ''}`}>
          <div class={`user-avatar ${user.status}`}>
            {user.avatarImage ? (
              <img src={user.avatarImage} alt={user.displayName} class="avatar-image" />
            ) : (
              <img src="/avatars/Egg.jpg" alt={user.displayName} class="avatar-image fallback-avatar" />
            )}
          </div>
          <div class="dm-user-info">
            <div class="dm-username">{user.displayName}</div>
          </div>
        </a>
      ))}
    </div>

    <UserInfo userId={currentLoggedInUser?.id || 'nickbg'} />
  </div>

  <MainChat 
    channelName={channel && channel !== 'home' && currentUser ? currentUser.displayName : 'Direct Messages'}
    channelIcon="ðŸ’¬"
    placeholder="Message @user"
  >
    <slot />
  </MainChat>

  <!-- User Sidebar (Right) -->
  <div class="user-sidebar">
    {channel && channel !== 'home' ? (
      <!-- User Info Panel -->
      <>
        {(() => {
          const selectedUser = users.users.find(u => u.id === channel);
          return selectedUser ? (
            <>
              <div class="user-info-header">
                <h3>User Info</h3>
              </div>
              <div class="user-info-panel">
                <div class="user-info-avatar">
                  {selectedUser.avatarImage ? (
                    <img src={selectedUser.avatarImage} alt={selectedUser.displayName} class="avatar-image" />
                  ) : (
                    <img src="/avatars/Egg.jpg" alt={selectedUser.displayName} class="avatar-image fallback-avatar" />
                  )}
                </div>
                <div class="user-info-details">
                  <div class="user-info-name">{selectedUser.displayName}</div>
                  <div class="user-info-status">
                    <div class={`status-indicator ${selectedUser.status}`}></div>
                    <span class="status-text">
                      {selectedUser.status === 'online' ? 'Online' : 
                       selectedUser.status === 'idle' ? 'Idle' : 
                       selectedUser.status === 'dnd' ? 'Do Not Disturb' : 'Offline'}
                    </span>
                  </div>
                </div>
              </div>
            </>
          ) : null;
        })()}
      </>
    ) : (
      <!-- Active Now Panel -->
      <>
        <div class="sidebar-header">
          <h3>Active Now</h3>
        </div>
        <div class="user-list">
          {users.users.filter(u => u.status === 'online' && !['kodama', 'alice', 'karl', 'scott', 'sato', 'nickbg'].includes(u.id)).map((user) => (
            <div class="user-item">
              <div class={`user-avatar ${user.status}`}>
                {user.avatarImage ? (
                  <img src={user.avatarImage} alt={user.displayName} class="avatar-image" />
                ) : (
                  <img src="/avatars/Egg.jpg" alt={user.displayName} class="avatar-image fallback-avatar" />
                )}
              </div>
              <div class="user-info">
                <div class="username">{user.displayName}</div>
              </div>
            </div>
          ))}
        </div>
      </>
    )}
  </div>
</div>

<style>
  @import '../styles/discord.css';

  .discord-layout {
    grid-template-areas: 
      "top-bar top-bar top-bar top-bar"
      "server-bar dm-sidebar main-chat user-sidebar";
  }

  /* DM Sidebar */
  .dm-sidebar {
    grid-area: dm-sidebar;
    background-color: var(--discord-bg-secondary);
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .dm-header {
    height: 48px;
    padding: 0 16px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom: 1px solid var(--discord-bg-tertiary);
  }

  .dm-title {
    font-size: 16px;
    font-weight: 600;
    margin: 0;
  }

  .dm-add-btn {
    background: none;
    border: none;
    color: var(--discord-interactive-normal);
    cursor: pointer;
    font-size: 18px;
    padding: 4px;
    border-radius: 4px;
    transition: background-color 0.2s;
  }

  .dm-add-btn:hover {
    background-color: var(--discord-bg-modifier-hover);
    color: var(--discord-interactive-hover);
  }

  .dm-list {
    flex: 1;
    padding: 8px 0 54px 0;
    overflow-y: auto;
    overflow-x: hidden;
    scrollbar-width: thin;
    scrollbar-color: var(--discord-scrollbar-auto-thumb) var(--discord-scrollbar-auto-track);
  }

  .dm-list::-webkit-scrollbar {
    width: 8px;
  }

  .dm-list::-webkit-scrollbar-track {
    background: var(--discord-scrollbar-auto-track);
  }

  .dm-list::-webkit-scrollbar-thumb {
    background: var(--discord-scrollbar-auto-thumb);
    border-radius: 4px;
  }

  .dm-list::-webkit-scrollbar-thumb:hover {
    background: var(--discord-bg-tertiary);
  }

  .dm-item {
    padding: 8px 16px;
    display: flex;
    align-items: center;
    gap: 12px;
    cursor: pointer;
    border-radius: 4px;
    margin: 0 8px;
    text-decoration: none;
    color: inherit;
    transition: background-color 0.2s;
  }

  .dm-item:hover {
    background-color: var(--discord-bg-modifier-hover);
  }

  .dm-item.active {
    background-color: var(--discord-bg-modifier-selected);
  }

  .dm-user-info {
    flex: 1;
    min-width: 0;
  }

  .dm-username {
    font-size: 14px;
    font-weight: 500;
    color: var(--discord-text-normal);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .user-avatar {
    position: relative;
    width: 40px;
    height: 40px;
    flex-shrink: 0;
  }

  .user-avatar .avatar-image {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
  }

  .user-avatar .fallback-avatar {
    opacity: 0.8;
    filter: grayscale(20%);
  }

  .user-avatar.online::after {
    content: '';
    position: absolute;
    bottom: -2px;
    right: -2px;
    width: 14px;
    height: 14px;
    background-color: var(--discord-text-positive);
    border: 2px solid var(--discord-bg-secondary);
    border-radius: 50%;
  }

  .user-avatar.idle::after {
    content: '';
    position: absolute;
    bottom: -2px;
    right: -2px;
    width: 14px;
    height: 14px;
    background-color: var(--discord-text-warning);
    border: 2px solid var(--discord-bg-secondary);
    border-radius: 50%;
  }

  .user-avatar.dnd::after {
    content: '';
    position: absolute;
    bottom: -2px;
    right: -2px;
    width: 14px;
    height: 14px;
    background-color: var(--discord-text-danger);
    border: 2px solid var(--discord-bg-secondary);
    border-radius: 50%;
  }

  /* User Sidebar */
  .user-sidebar {
    grid-area: user-sidebar;
    background-color: var(--discord-bg-primary);
    display: flex;
    flex-direction: column;
    height: calc(100vh - 32px);
    max-height: calc(100vh - 32px);
    border-left: 1px solid rgba(255, 255, 255, 0.1);
  }

  .sidebar-header {
    height: 48px;
    padding: 0 16px;
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--discord-bg-tertiary);
  }

  .sidebar-header h3 {
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    color: var(--discord-text-muted);
    margin: 0;
  }

  .user-list {
    flex: 1;
    padding: 8px 0;
    overflow-y: auto;
    overflow-x: hidden;
    scrollbar-width: thin;
    scrollbar-color: var(--discord-scrollbar-auto-thumb) var(--discord-scrollbar-auto-track);
  }

  .user-list::-webkit-scrollbar {
    width: 8px;
  }

  .user-list::-webkit-scrollbar-track {
    background: var(--discord-scrollbar-auto-track);
  }

  .user-list::-webkit-scrollbar-thumb {
    background: var(--discord-scrollbar-auto-thumb);
    border-radius: 4px;
  }

  .user-list::-webkit-scrollbar-thumb:hover {
    background: var(--discord-bg-tertiary);
  }

  .user-item {
    padding: 2px 16px;
    display: flex;
    align-items: center;
    gap: 10px;
    cursor: pointer;
  }

  .user-item:hover {
    background-color: transparent;
  }

  .user-item .user-info {
    flex: 1;
    min-width: 0;
  }

  .username {
    font-size: 14px;
    font-weight: 500;
    color: var(--discord-text-normal);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  /* User Info Panel */
  .user-info-header {
    height: 48px;
    padding: 0 16px;
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--discord-bg-tertiary);
  }

  .user-info-header h3 {
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    color: var(--discord-text-muted);
    margin: 0;
  }

  .user-info-panel {
    padding: 20px 16px;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .user-info-avatar {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    margin-bottom: 16px;
    overflow: hidden;
    position: relative;
  }

  .user-info-avatar .avatar-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .user-info-avatar .fallback-avatar {
    opacity: 0.8;
    filter: grayscale(20%);
  }

  .user-info-details {
    width: 100%;
  }

  .user-info-name {
    font-size: 20px;
    font-weight: 600;
    color: var(--discord-text-normal);
    margin-bottom: 8px;
  }

  .user-info-status {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }

  .status-indicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
  }

  .status-indicator.online {
    background-color: var(--discord-text-positive);
  }

  .status-indicator.idle {
    background-color: var(--discord-text-warning);
  }

  .status-indicator.dnd {
    background-color: var(--discord-text-danger);
  }

  .status-indicator.offline {
    background-color: var(--discord-text-muted);
  }

  .status-text {
    font-size: 14px;
    color: var(--discord-text-muted);
  }
</style>